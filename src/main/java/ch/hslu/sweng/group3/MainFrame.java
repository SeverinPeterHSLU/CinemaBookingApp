package ch.hslu.sweng.group3;

import javax.naming.ldap.SortKey;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import static ch.hslu.sweng.group3.Show.getShows;

public class MainFrame extends JFrame {
    private JPanel mainPanel;
    private JPanel navigationPanel;
    private JButton btnMovieAdm;
    private JTable weekProgramTable;
    private JLabel lblMovieOverviewTable;
    private JButton btnShowAdm;
    private JButton btnResAdm;
    private JButton btnRoomAdm;
    private JPanel showOverviewTablePanel;

    public MainFrame() {
        setTitle("Cinema Booking System");
        setSize(1500, 800);
        setLocationRelativeTo(null);
        setContentPane(mainPanel);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setVisible(true);

        showOverviewTablePanel.setLayout(new BorderLayout());
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setVisible(true);

        DefaultTableModel model = new DefaultTableModel();
        weekProgramTable = new JTable(model);
        showOverviewTablePanel.add(weekProgramTable, BorderLayout.CENTER);
        showOverviewTablePanel.add(new JScrollPane(weekProgramTable));
        weekProgramTable.setModel(model);


        Object[] headers = {"Show ID", "Start", "MovieID", "Movie Title", "Room", "Add Reservation"};
        model.setColumnIdentifiers(headers);

       ArrayList<Show> showsOfTheWeek = Show.getShows();
       TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(weekProgramTable.getModel());
       weekProgramTable.setRowSorter(sorter);

        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<>(25);
        sortKeys.add(new RowSorter.SortKey(1, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);

        for (int s = 0; s < showsOfTheWeek.size(); s++) {
            SimpleDateFormat df = new SimpleDateFormat("yyyy.MM.dd HH.mm");
            String showID = Integer.toString(showsOfTheWeek.get(s).getShowID());
            Date d = showsOfTheWeek.get(s).getStart();
            String startOfShow = df.format(d);
            String movieID = String.valueOf(showsOfTheWeek.get(s).getMovie().getMovieID());
            String movieTitle = String.valueOf(showsOfTheWeek.get(s).getMovie().getMovieTitle());
            Room r = showsOfTheWeek.get(s).getRoom();
            String roomID = String.valueOf(r.getRoomID());

            Object[] row = {showID, startOfShow, movieID, movieTitle, roomID, "Add Reservation"};
            if (ExceptionCheck.isDateInCurrentWeek(d) == true) {
                model.addRow(row);
            }
        }
        Action addRes = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                Object obj = weekProgramTable.getValueAt(weekProgramTable.getSelectedRow(), 0);
                String showID_String = obj.toString();
                int showID = Integer.parseInt(showID_String);
                dispose();
                AddReservationFormFrame addReservationFormFrame = new AddReservationFormFrame(showID);
            }
        };

        ButtonColumn editButtons = new ButtonColumn(weekProgramTable, addRes, 5);

        //navigate to Movie Administration
        btnMovieAdm.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                MovieAdministrationFrame movieAdm = new MovieAdministrationFrame();
            }
        });

        //navigate to Show Administration
        btnShowAdm.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                ShowAdministrationFrame showAdm = new ShowAdministrationFrame();
            }
        });

        //navigate to Reservation Administration
        btnResAdm.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                ReservationAdministrationFrame resAdm = new ReservationAdministrationFrame();
            }
        });

        //navigate to Room Administration
        btnRoomAdm.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                RoomAdministrationFrame roomAdm = new RoomAdministrationFrame();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        navigationPanel = new JPanel();
        navigationPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(navigationPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 60), null, 0, false));
        btnMovieAdm = new JButton();
        btnMovieAdm.setText("Movie Adm");
        navigationPanel.add(btnMovieAdm, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 40), null, 1, false));
        btnShowAdm = new JButton();
        btnShowAdm.setText("Show Adm");
        navigationPanel.add(btnShowAdm, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 40), null, 1, false));
        btnResAdm = new JButton();
        btnResAdm.setText("Reservations");
        navigationPanel.add(btnResAdm, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 40), null, 1, false));
        btnRoomAdm = new JButton();
        btnRoomAdm.setText("Room Adm");
        navigationPanel.add(btnRoomAdm, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 40), null, 1, false));
        showOverviewTablePanel = new JPanel();
        showOverviewTablePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(showOverviewTablePanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        weekProgramTable = new JTable();
        showOverviewTablePanel.add(weekProgramTable, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        lblMovieOverviewTable = new JLabel();
        lblMovieOverviewTable.setText("Movie Overview of the Week");
        panel1.add(lblMovieOverviewTable, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}

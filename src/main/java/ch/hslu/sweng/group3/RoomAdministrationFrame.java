package ch.hslu.sweng.group3;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class RoomAdministrationFrame extends JFrame {
    private JLabel lblRoomOverview;
    private JTable overviewOfRoomsTable;
    private JButton btnBackToMain;
    private JPanel roomAdministrationPanel;
    private JPanel roomTablePanel;

    public RoomAdministrationFrame() {
        setTitle("Room Administration");
        setSize(1500, 800);
        setContentPane(roomAdministrationPanel);
        setContentPane(roomAdministrationPanel);
        roomTablePanel.setLayout(new BorderLayout());
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setVisible(true);

        DefaultTableModel model = new DefaultTableModel();
        overviewOfRoomsTable = new JTable(model);
        roomTablePanel.add(overviewOfRoomsTable, BorderLayout.CENTER);
        roomTablePanel.add(new JScrollPane(overviewOfRoomsTable));
        overviewOfRoomsTable.setModel(model);


        Object[] headers = {"Room number", "Number of seats", "Edit"};
        model.setColumnIdentifiers(headers);

        ArrayList<Room> allRooms = App.roomDAO.getRooms();


        for (int r = 0; r < allRooms.size(); r++) {
            String roomID = Integer.toString(allRooms.get(r).getRoomID());
            String numberOfSeats = String.valueOf(allRooms.get(r).getSeatsOfRoom());

            Object[] row = {roomID, numberOfSeats, "Edit"};
            model.addRow(row);
            //model.setValueAt(new JButton("Edit"), r, 3);
        }
        Action edit = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                Object obj = overviewOfRoomsTable.getValueAt(overviewOfRoomsTable.getSelectedRow(), 0);
                String roomID_string = obj.toString();
                int roomID = Integer.parseInt(roomID_string);
                dispose();
                EditRoomFormFrame editRoomFormFrame = new EditRoomFormFrame(roomID);
            }
        };

        ButtonColumn editButtons = new ButtonColumn(overviewOfRoomsTable, edit, 2);


        //navigates back to mainPanel
        btnBackToMain.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                MainFrame mainframe = new MainFrame();

            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        roomAdministrationPanel = new JPanel();
        roomAdministrationPanel.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        lblRoomOverview = new JLabel();
        lblRoomOverview.setText("Overview of Rooms");
        roomAdministrationPanel.add(lblRoomOverview, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnBackToMain = new JButton();
        btnBackToMain.setText("Go Back");
        roomAdministrationPanel.add(btnBackToMain, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 40), null, 0, false));
        roomTablePanel = new JPanel();
        roomTablePanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        roomAdministrationPanel.add(roomTablePanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        overviewOfRoomsTable = new JTable();
        roomTablePanel.add(overviewOfRoomsTable, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return roomAdministrationPanel;
    }

}
